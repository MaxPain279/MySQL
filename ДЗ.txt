Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”

ЗАДАНИЕ №1

mysql> UPDATE users SET created_at = NOW(), update_at = NOW();
ERROR 1054 (42S22): Unknown column 'update_at' in 'field list'
mysql> UPDATE users SET created_at = NOW(), updated_at = NOW();
Query OK, 6 rows affected (0.01 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> SELECT * FROM users;
+----+-----------+-------------+---------------------+---------------------+
| id | name      | birthday_at | created_at          | updated_at          |
+----+-----------+-------------+---------------------+---------------------+
|  1 | Геннадий  | 1990-10-05  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  2 | Наталья   | 1984-11-12  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  3 | Александр | 1985-05-20  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  4 | Сергей    | 1988-02-14  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  5 | Иван      | 1998-01-12  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  6 | Мария     | 1992-08-29  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
+----+-----------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)

mysql> ALTER TABLE
    -> users
    -> CHANGE
    -> created_at created_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE
    -> users
    -> CHANGE
    -> updated_at updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

ЗАДАНИЕ №2

mysql> DESCRIBE users;
+-------------+-----------------+------+-----+-------------------+-----------------------------------------------+
| Field       | Type            | Null | Key | Default           | Extra                                         |
+-------------+-----------------+------+-----+-------------------+-----------------------------------------------+
| id          | bigint unsigned | NO   | PRI | NULL              | auto_increment                                |
| name        | varchar(255)    | YES  |     | NULL              |                                               |
| birthday_at | date            | YES  |     | NULL              |                                               |
| created_at  | datetime        | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |
| updated_at  | datetime        | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |
+-------------+-----------------+------+-----+-------------------+-----------------------------------------------+
5 rows in set (0.00 sec)

ЗАДАНИЕ №3

mysql> DESCRIBE storehouses_products;
+---------------+-----------------+------+-----+-------------------+-----------------------------------------------+
| Field         | Type            | Null | Key | Default           | Extra                                         |
+---------------+-----------------+------+-----+-------------------+-----------------------------------------------+
| id            | bigint unsigned | NO   | PRI | NULL              | auto_increment                                |
| storehouse_id | int unsigned    | YES  |     | NULL              |                                               |
| product_id    | int unsigned    | YES  |     | NULL              |                                               |
| value         | int unsigned    | YES  |     | NULL              |                                               |
| created_at    | datetime        | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED                             |
| updated_at    | datetime        | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |
+---------------+-----------------+------+-----+-------------------+-----------------------------------------------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM storehouses_products ORDER BY value;
Empty set (0.00 sec)

mysql> INSERT INTO
    -> storehouses_products (storehouse_id, product_id, value)
    -> VALUES
    -> (1, 245, 0),
    -> (2,2456, 2500),
    -> (1, 877, 0),
    -> (1, 395, 30),
    -> (2, 787, 500),
    -> (2, 942, 1);
Query OK, 6 rows affected (0.01 sec)


mysql> SELECT id, value, IF(value > 0, 0, 1) AS new_table FROM storehouses_products ORDER BY value;
+----+-------+-----------+
| id | value | new_table |
+----+-------+-----------+
|  1 |     0 |         1 |
|  3 |     0 |         1 |
|  6 |     1 |         0 |
|  4 |    30 |         0 |
|  5 |   500 |         0 |
|  2 |  2500 |         0 |
+----+-------+-----------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM storehouses_products ORDER BY IF(value > 0, 0, 1), value;
+----+---------------+------------+-------+---------------------+---------------------+
| id | storehouse_id | product_id | value | created_at          | updated_at          |
+----+---------------+------------+-------+---------------------+---------------------+
|  6 |             2 |        942 |     1 | 2020-03-09 17:37:24 | 2020-03-09 17:37:24 |
|  4 |             1 |        395 |    30 | 2020-03-09 17:37:24 | 2020-03-09 17:37:24 |
|  5 |             2 |        787 |   500 | 2020-03-09 17:37:24 | 2020-03-09 17:37:24 |
|  2 |             2 |       2456 |  2500 | 2020-03-09 17:37:24 | 2020-03-09 17:37:24 |
|  1 |             1 |        245 |     0 | 2020-03-09 17:37:24 | 2020-03-09 17:37:24 |
|  3 |             1 |        877 |     0 | 2020-03-09 17:37:24 | 2020-03-09 17:37:24 |
+----+---------------+------------+-------+---------------------+---------------------+
6 rows in set (0.00 sec)


Практическое задание теме “Агрегация данных”

ЗАДАНИЕ №1

mysql> SELECT * FROM users;
+----+-----------+-------------+---------------------+---------------------+
| id | name      | birthday_at | created_at          | updated_at          |
+----+-----------+-------------+---------------------+---------------------+
|  1 | Геннадий  | 1990-10-05  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  2 | Наталья   | 1984-11-12  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  3 | Александр | 1985-05-20  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  4 | Сергей    | 1988-02-14  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  5 | Иван      | 1998-01-12  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  6 | Мария     | 1992-08-29  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
+----+-----------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)

mysql> SELECT TIMESTAMPDIFF(YEAR, birthday_at, NOW()) AS age FROM users;
+------+
| age  |
+------+
|   29 |
|   35 |
|   34 |
|   32 |
|   22 |
|   27 |
+------+
6 rows in set (0.00 sec)

mysql> SELECT AVG(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) AS age FROM users;
+---------+
| age     |
+---------+
| 29.8333 |
+---------+
1 row in set (0.00 sec)

ЗАДАНИЕ №2

mysql> SELECT * FROM users;
+----+-----------+-------------+---------------------+---------------------+
| id | name      | birthday_at | created_at          | updated_at          |
+----+-----------+-------------+---------------------+---------------------+
|  1 | Геннадий  | 1990-10-05  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  2 | Наталья   | 1984-11-12  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  3 | Александр | 1985-05-20  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  4 | Сергей    | 1988-02-14  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  5 | Иван      | 1998-01-12  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
|  6 | Мария     | 1992-08-29  | 2020-03-09 17:13:11 | 2020-03-09 17:13:11 |
+----+-----------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)

mysql> SELECT DAY(birthday_at), MONTH(birthday_at), YEAR(NOW()) FROM users;
+------------------+--------------------+-------------+
| DAY(birthday_at) | MONTH(birthday_at) | YEAR(NOW()) |
+------------------+--------------------+-------------+
|                5 |                 10 |        2020 |
|               12 |                 11 |        2020 |
|               20 |                  5 |        2020 |
|               14 |                  2 |        2020 |
|               12 |                  1 |        2020 |
|               29 |                  8 |        2020 |
+------------------+--------------------+-------------+
6 rows in set (0.00 sec)

mysql> SELECT DATE(CONCAT_WS('.', YEAR(NOW()), MONTH(birthday_at), DAY(birthday_at))) AS date FROM users;
+------------+
| date       |
+------------+
| 2020-10-05 |
| 2020-11-12 |
| 2020-05-20 |
| 2020-02-14 |
| 2020-01-12 |
| 2020-08-29 |
+------------+
6 rows in set (0.00 sec)

mysql> SELECT DATE_FORMAT(DATE(CONCAT_WS('.', YEAR(NOW()), MONTH(birthday_at), DAY(birthday_at))), '%W') AS date FROM users;
+-----------+
| date      |
+-----------+
| Monday    |
| Thursday  |
| Wednesday |
| Friday    |
| Sunday    |
| Saturday  |
+-----------+
6 rows in set (0.00 sec)

mysql> SELECT DATE_FORMAT(DATE(CONCAT_WS('.', YEAR(NOW()), MONTH(birthday_at), DAY(birthday_at))), '%W') AS date, COUNT(*) AS total  FROM users GROUP BY date;
+-----------+-------+
| date      | total |
+-----------+-------+
| Monday    |     1 |
| Thursday  |     1 |
| Wednesday |     1 |
| Friday    |     1 |
| Sunday    |     1 |
| Saturday  |     1 |
+-----------+-------+
6 rows in set (0.00 sec)


